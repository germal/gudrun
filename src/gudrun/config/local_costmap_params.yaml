local_costmap:
  global_frame: map
  robot_base_frame: base_link
  update_frequency: 10.0
  publish_frequency: 10.0
  static_map: false
  rolling_window: true
  # always_send_full_costmap: true
  width: 4
  height: 4
  resolution: 0.025
  
  plugins:
   - {name: static_layer,            type: "costmap_2d::StaticLayer"}
   # - {name: laserscan_layer,          type: "costmap_2d::ObstacleLayer"}
   - {name: segmentation_layer, type: "spatio_temporal_voxel_layer/SpatioTemporalVoxelLayer"}
  
  laserscan_layer:
    observation_sources: laser_scan_sensor

    laser_scan_sensor: 
      sensor_frame: d400_depth_frame
      data_type: LaserScan
      topic: /scan
      marking: true
      clearing: true
      # Since the virtual laser sensor is a little tilted, we need a significant min_obstacle_height
      # to include both below-plane and above-plane (default) detections.
      min_obstacle_height: -1.0
      max_obstacle_height: 3.0
      #inf_is_valid: true

  segmentation_layer:
    enabled:               true
    voxel_decay:           20     #seconds if linear, e^n if exponential
    decay_model:           0      #0=linear, 1=exponential, -1=persistent
    voxel_size:            0.025   #meters
    track_unknown_space:   true   #default space is unknown
    observation_persistence: 0.0  #seconds
    max_obstacle_height:   2.0    #meters
    unknown_threshold:     15     #voxel height
    mark_threshold:        0      #voxel height
    update_footprint_enabled: true
    combination_method:    1      #1=max, 0=override
    obstacle_range:        4.0    #meters
    origin_z:              0.0    #meters
    publish_voxel_map:     true   # default off
    transform_tolerance:   0.2    # seconds
    observation_sources:   segmentation_clear segmentation_mark
    segmentation_mark:
      data_type: PointCloud2
      topic: segmentation/undrivable/depth/points
      marking: true
      clearing: false
      min_obstacle_height: -1.0     #default 0, meters
      #max_obstacle_height: 3.0     #defaule 3, meters
      expected_update_rate: 0.0    #default 0, if not updating at this rate at least, remove from buffer
      #observation_persistence: 0.0 #default 0, use all measurements taken during now-value, 0=latest 
      #inf_is_valid: false          #default false, for laser scans
      clear_after_reading: true    #default false, clear the buffer after the layer gets readings from it
      voxel_filter: true           #default off, apply voxel filter to sensor, recommend on 
    segmentation_clear:
      data_type: PointCloud2
      topic: segmentation/undrivable/depth/points
      marking: false
      clearing: true
      min_z: -1                   #default 0, meters
      #max_z: 7.0                   #default 10, meters
      vertical_fov_angle: 0.7      #default 0.7, radians
      horizontal_fov_angle: 1.04   #default 1.04, radians
      decay_acceleration: 1.       #default 0, 1/s^2. If laser scanner MUST be 0
      model_type: 0                #default 0 (depth camera). Use 1 for 3D Lidar